package uk.co.bigsoft.filesucker.tools.launch_profile;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JTextField;

import uk.co.bigsoft.filesucker.Utility;
import uk.co.bigsoft.filesucker.ui.taskscreen.TaskScreen;

public class PasteMouseListener implements MouseListener {
	private JTextField m_textfield;

	PasteMouseListener(JTextField textfield) {
		m_textfield = textfield;
	}

	public void mousePressed(MouseEvent e) {
		int clickedButton = e.getButton();
		if (clickedButton == 3)
			rightClick();
		else
			leftClick();
	}

	public void mouseReleased(MouseEvent e) {
		// empty
	}

	public void mouseClicked(MouseEvent e) {
		// empty
	}

	public void mouseEntered(MouseEvent e) {
		// empty
	}

	public void mouseExited(MouseEvent e) {
		// empty
	}

	private void rightClick() {
		String s = Utility.getClipboard();
		if (s != null) {
			m_textfield.setText(s);
			TaskScreen.changed();
		}
	}

	private void leftClick() {
		String s = m_textfield.getText();
		int pos = m_textfield.getCaretPosition();
		int len = m_textfield.getText().length();
		int startpos = -1, endpos = -1;
		// System.out.println("mousePressed: "+pos);
		pos--;
		// Backwards
		for (int i = pos; i >= 0; --i) {
			if (s.charAt(i) == '{') {
				startpos = i;
				break;
			} else if (s.charAt(i) == '}')
				return;
		}
		// Forwards
		if (pos == -1)
			pos = 0;
		for (int i = pos; i < len; ++i) {
			if (s.charAt(i) == '}') {
				endpos = i + 1; // Move to the next gap
				break;
			} else if (s.charAt(i) == '{')
				return;
		}
		if (startpos == -1 || endpos == -1)
			return;
		m_textfield.setSelectionStart(startpos);
		m_textfield.setSelectionEnd(endpos);
	}

}
