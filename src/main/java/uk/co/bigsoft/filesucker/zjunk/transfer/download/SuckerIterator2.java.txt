package uk.co.bigsoft.filesucker.transfer.download;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import uk.co.bigsoft.filesucker.transfer.sucker_type.SuckerType;
import uk.co.bigsoft.filesucker.transfer.sucker_type.SuckerTypeFactory;

public class SuckerIterator2 implements Iterable<String> {

	private SuckerTypeFactory factory = new SuckerTypeFactory();
	private ArrayList<SuckerType> suckers = new ArrayList<>();
	private int[] currentIndex = new int[0];
	//private List<Integer> currentList;
	private int[] maxIndex = new int[0];
	//private List<Integer> maxList;
	
	public SuckerIterator2(String url) {
		
		Pattern p = Pattern.compile("\\{[^}]*\\}");
		Matcher matcher = p.matcher(url);
		
		int pos = 0;
		
		while (matcher.find()) {
			
			int start = matcher.start();
			int end = matcher.end();
			
			if (pos != start) {
				String chunk = url.substring(pos, start);
				suckers.add(factory.create(chunk));
				pos = end;
			}
			suckers.add(factory.create(matcher.group()));
		}
		
		if (pos < url.length()-1) {
			String chunk = url.substring(pos, url.length()-1);
			suckers.add(factory.create(chunk));
		}
		
		currentIndex = suckers.stream().mapToInt(s -> 0).toArray();
		currentIndex[currentIndex.length-1] = -1;
		maxIndex = suckers.stream().mapToInt(s -> s.getList().size()-1).toArray();
		
		
		while (true) {
			currentIndex = nextCurrent(0, currentIndex, maxIndex);
			if (currentIndex.length == 0) {
				break;
			}
			out(currentIndex);
		}
		
	}


	public static void main2(String[] args) {
		String url = "https://images.nubilefilms.com/videos/kamasutra_with_sydney_cole/photos/{N,1,1,16,1}.jpg";
		SuckerIterator2 si = new SuckerIterator2(url);
		
		for (String s : si) {
			System.out.println(s);
		}
		
		int[] c = {1,1,1};
		int[] m = {1,2,1};
		
		while (true) {
			c = nextCurrent(0, c, m);
			if (c.length == 0) {
				break;
			}
			out(c);
		}

	}
	
	public static void main(String[] args) {
		int[] c = {-1,0,0};
		int[] m = {1,2,1};
		
		while (true) {
			c = nextCurrent(0, c, m);
			if (c.length == 0) {
				break;
			}
			out(c);
		}

	}
	
	static void out(int[] o) {
		StringBuilder s = new StringBuilder();
		for (int i : o) {
			s.append(i);
			s.append(",");
		}
		System.out.println(s.toString());
	}
	static int[] nextCurrent(int idx, int[] cur, int[] max) {

		if (cur[idx] < max[idx]-1) {
			++cur[idx];
			return cur;
		}
		
		if (Arrays.equals(cur, max)) {
			return new int[0];
		}

		cur[idx] = 0;
		return nextCurrent(++idx, cur, max);
	}

	@Override
	public Iterator<String> iterator() {
		// TODO Auto-generated method stub
		return null;
	}


}
